{
  "hash": "95a833e096f2926495e07471aabd25a2",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Moritz Henkel\"\n---\n\n# SALES ANALYSIS Working Frame----\n\n## Load libraries ----\nFirst of all we need to import the libraries.\n```\nlibrary(tidyverse)\nlibrary(readxl)\n```\n\n## Importing Files ----\nThen we need to import the files.\n```\nbikes_tbl <- read_excel(\"ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\nbikeshops_tbl <- read_excel(\"ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n```\n\n## Examining Data ----\nSubsequently, we check if everything worked well.\n```\nglimpse(bikeshops_tbl)\nglimpse(orderlines_tbl)\nglimpse(bikes_tbl\n```\n## Joining Data ----\nThen we need to join the data. Here, we are gonna use the leftjoin and allign the data with the relevant columns of the respective tibbles. Lastly, we are gonna have a quick look into the new data table.\n```\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\nglimpse(bike_orderlines_joined_tbl)\n```\n## Wrangling Data ----\nSeparate the column category into the corresponding categories.Create a new column for the total price and remove all the unnecessary data. Moreover, we need to select the relevant columns.\n```\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \",\") %>%\n\n  mutate(total.price = price * quantity) %>%\n  \n  select(-...1, -gender,-url,-lat,-lng,-name,-frame.material,-weight,-category,-model,-model.year) %>%\n  \n  select(order.id, contains(\"order\"), city, state,\n         price, quantity, total.price,\n         everything()) %>%\n  \n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n```\n# Business Insights ----\n### Sales by Location ----\n## Step 1 - Manipulate\nHere we need to manipulate the data first. Especially grouping by state and summing up the total amount of sales in order to be able to plot it later on.\n```\nsales_by_location_tbl <- bike_orderlines_wrangled_tbl %>%\nselect(total_price, state) %>%\ngroup_by(state) %>%\nsummarise(sales = sum(total_price)) %>%\nungroup() %>%\nmutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_location_tbl\n```\n## Step 2 - Visualize\nIn this last step, we are able to plot our sales-results. We pipe our sales data into the ggplot funtcion and use the geom_col function in order to get the desired bars. By adding labels, we are able to highlight our results even more.\n```\nsales_by_location_tbl %>%\n  \nggplot(aes(x = state, y = sales)) +\ngeom_col(fill = \"#2DC6D6\") +\ngeom_label(aes(label = sales_text)) +\nscale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\ntheme(axis.text.x = element_text(angle = 45, hjust = 1)) +\nlabs(\n    title    = \"Revenue by Location\",\n    subtitle = \"Highest Revenue in NRW\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n```\nThe results are shown in the figure below.\n![Caption](../../assets/img/tidyverse1.png)\n\n### Sales by Location and year (facet_wrap) ----\n## Step 1 - Manipulate\nIn order to get the sales corresponding to the location and year, we need to group our data by year and state. And also do the regular editing of the code.\n\n```\nsales_by_year_by_location_tbl <- bike_orderlines_wrangled_tbl %>%\nselect(order_date, total_price, state) %>%\nmutate(year = year(order_date)) %>%\n  \ngroup_by(year, state) %>%\nsummarise(sales=sum(total_price)) %>%\nungroup() %>%\n\nmutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_year_by_location_tbl\n```\n## Step 2 - Visualize\nNow once again we can visualize our data. In order to tease the sales for each state, we need to use the face wrap function in this case.\n```\nsales_by_year_by_location_tbl %>%\n\nggplot(aes(x =year, y = sales, fill = state)) +\n  \ngeom_col() +\ngeom_smooth(method = \"lm\", se = FALSE) +\n  \nfacet_wrap(~ state) +\n\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by state and year\",\n    subtitle = \"NRW has the steepest trend curve, but Hamburg has the most continuous growth\",\n    fill = \"Main category\" # Changes the legend name\n  ) \n```\nThe result is shown below.\n![Caption](../../assets/img/tidyverse2.jpeg)\n\n\n\n\n::: callout-note\nFormat guidelines below!\n:::\n\nThis is a `.qmd` file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a \\# in front of your text, it will create a top level-header.\n\nTo learn more about Quarto websites visit <https://quarto.org/docs/websites>.\n\n# Text Formatting\n\n*italics* and **bold**\n\nsuperscript^2^ / subscript~2~\n\n~~strikethrough~~\n\n`verbatim code`\n\n> Blockquote\n\n# Headings\n\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6\n\n# Links & Images\n\n<https://quarto.org>\n\n[Quarto](https://quarto.org)\n\n![Caption](../../assets/img/elephant.png)\n\n[![Caption](../../assets/img/elephant.png)](https://quarto.org)\n\n[![Caption](../../assets/img/elephant.png)](https://quarto.org \"An elephant\")\n\n\n# Lists\n\n* unordered list\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n        \n*   item 2\n\n    Continued (indent 4 spaces)\n    \n    \n1. ordered list\n2. item 2\n    i) sub-item 1\n         A.  sub-sub-item 1\n         \n(@)  A list whose numbering\n\ncontinues after\n\n(@)  an interruption\n\n# Tables\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|   12  |  12  |    12   |    12  |\n|  123  |  123 |   123   |   123  |\n|    1  |    1 |     1   |     1  |\n\n# Source Code\n\nUse ``` to delimit blocks of source code:\n\n```\ncode\n```\n\nAdd a language to syntax highlight code blocks:\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_78745102f85d5cf89cad6fe4a83ca938'}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 2\n```\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_f6e8e1bca112a7054679dca3031b6157'}\n\n```{.r .cell-code}\ncars\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"speed\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"dist\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"2\"},{\"1\":\"4\",\"2\":\"10\"},{\"1\":\"7\",\"2\":\"4\"},{\"1\":\"7\",\"2\":\"22\"},{\"1\":\"8\",\"2\":\"16\"},{\"1\":\"9\",\"2\":\"10\"},{\"1\":\"10\",\"2\":\"18\"},{\"1\":\"10\",\"2\":\"26\"},{\"1\":\"10\",\"2\":\"34\"},{\"1\":\"11\",\"2\":\"17\"},{\"1\":\"11\",\"2\":\"28\"},{\"1\":\"12\",\"2\":\"14\"},{\"1\":\"12\",\"2\":\"20\"},{\"1\":\"12\",\"2\":\"24\"},{\"1\":\"12\",\"2\":\"28\"},{\"1\":\"13\",\"2\":\"26\"},{\"1\":\"13\",\"2\":\"34\"},{\"1\":\"13\",\"2\":\"34\"},{\"1\":\"13\",\"2\":\"46\"},{\"1\":\"14\",\"2\":\"26\"},{\"1\":\"14\",\"2\":\"36\"},{\"1\":\"14\",\"2\":\"60\"},{\"1\":\"14\",\"2\":\"80\"},{\"1\":\"15\",\"2\":\"20\"},{\"1\":\"15\",\"2\":\"26\"},{\"1\":\"15\",\"2\":\"54\"},{\"1\":\"16\",\"2\":\"32\"},{\"1\":\"16\",\"2\":\"40\"},{\"1\":\"17\",\"2\":\"32\"},{\"1\":\"17\",\"2\":\"40\"},{\"1\":\"17\",\"2\":\"50\"},{\"1\":\"18\",\"2\":\"42\"},{\"1\":\"18\",\"2\":\"56\"},{\"1\":\"18\",\"2\":\"76\"},{\"1\":\"18\",\"2\":\"84\"},{\"1\":\"19\",\"2\":\"36\"},{\"1\":\"19\",\"2\":\"46\"},{\"1\":\"19\",\"2\":\"68\"},{\"1\":\"20\",\"2\":\"32\"},{\"1\":\"20\",\"2\":\"48\"},{\"1\":\"20\",\"2\":\"52\"},{\"1\":\"20\",\"2\":\"56\"},{\"1\":\"20\",\"2\":\"64\"},{\"1\":\"22\",\"2\":\"66\"},{\"1\":\"23\",\"2\":\"54\"},{\"1\":\"24\",\"2\":\"70\"},{\"1\":\"24\",\"2\":\"92\"},{\"1\":\"24\",\"2\":\"93\"},{\"1\":\"24\",\"2\":\"120\"},{\"1\":\"25\",\"2\":\"85\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-3_c54f7526e0f7f04368360fa7b6e5663a'}\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}